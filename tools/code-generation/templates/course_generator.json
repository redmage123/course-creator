{
  "name": "course_generator",
  "description": "Course Generation and Management Service with Content Authoring",
  "port": 8001,
  "database": "courses_db",
  "provides": [
    "course_management",
    "content_authoring", 
    "lesson_management",
    "course_analytics",
    "content_upload"
  ],
  "depends_on": [
    "user-service"
  ],
  "endpoints": [
    {
      "name": "course",
      "routes": [
        {
          "method": "GET",
          "path": "/courses",
          "function_name": "list_courses",
          "description": "List all courses with filtering and pagination",
          "return_type": "Dict[str, Any]",
          "query_params": [
            {"name": "skip", "type": "int", "default": "0"},
            {"name": "limit", "type": "int", "default": "100"},
            {"name": "published_only", "type": "bool", "default": "True"},
            {"name": "instructor_id", "type": "Optional[int]", "default": "None"},
            {"name": "difficulty", "type": "Optional[str]", "default": "None"},
            {"name": "search", "type": "Optional[str]", "default": "None"},
            {"name": "category_id", "type": "Optional[int]", "default": "None"}
          ]
        },
        {
          "method": "POST",
          "path": "/courses",
          "function_name": "create_course",
          "description": "Create a new course with instructor validation",
          "return_type": "Dict[str, Any]",
          "body_param": {"name": "course_data", "type": "CourseCreate"}
        },
        {
          "method": "GET",
          "path": "/courses/{course_id}",
          "function_name": "get_course",
          "description": "Get course details by ID with instructor info",
          "return_type": "Dict[str, Any]",
          "path_params": [{"name": "course_id", "type": "int"}]
        },
        {
          "method": "PUT",
          "path": "/courses/{course_id}",
          "function_name": "update_course",
          "description": "Update course information with permission checks",
          "return_type": "Dict[str, Any]",
          "path_params": [{"name": "course_id", "type": "int"}],
          "body_param": {"name": "course_data", "type": "CourseUpdate"}
        },
        {
          "method": "DELETE",
          "path": "/courses/{course_id}",
          "function_name": "delete_course",
          "description": "Delete a course with cascading cleanup",
          "return_type": "Dict[str, Any]",
          "path_params": [{"name": "course_id", "type": "int"}]
        },
        {
          "method": "POST",
          "path": "/courses/{course_id}/publish",
          "function_name": "publish_course",
          "description": "Publish a course and notify other services",
          "return_type": "Dict[str, Any]",
          "path_params": [{"name": "course_id", "type": "int"}]
        },
        {
          "method": "POST",
          "path": "/courses/{course_id}/unpublish",
          "function_name": "unpublish_course",
          "description": "Unpublish a course and update dependent services",
          "return_type": "Dict[str, Any]",
          "path_params": [{"name": "course_id", "type": "int"}]
        },
        {
          "method": "GET",
          "path": "/courses/{course_id}/analytics",
          "function_name": "get_course_analytics",
          "description": "Get course analytics with cross-service data",
          "return_type": "Dict[str, Any]",
          "path_params": [{"name": "course_id", "type": "int"}]
        },
        {
          "method": "GET",
          "path": "/courses/instructor/{instructor_id}",
          "function_name": "get_instructor_courses",
          "description": "Get all courses by instructor with validation",
          "return_type": "List[Dict[str, Any]]",
          "path_params": [{"name": "instructor_id", "type": "int"}]
        },
        {
          "method": "POST",
          "path": "/courses/{course_id}/duplicate",
          "function_name": "duplicate_course",
          "description": "Duplicate a course with all content",
          "return_type": "Dict[str, Any]",
          "path_params": [{"name": "course_id", "type": "int"}]
        }
      ]
    },
    {
      "name": "lesson",
      "routes": [
        {
          "method": "GET",
          "path": "/courses/{course_id}/lessons",
          "function_name": "list_lessons",
          "description": "List all lessons for a course with content metadata",
          "return_type": "List[Dict[str, Any]]",
          "path_params": [{"name": "course_id", "type": "int"}],
          "query_params": [
            {"name": "skip", "type": "int", "default": "0"},
            {"name": "limit", "type": "int", "default": "100"},
            {"name": "include_content", "type": "bool", "default": "False"}
          ]
        },
        {
          "method": "POST",
          "path": "/courses/{course_id}/lessons",
          "function_name": "create_lesson",
          "description": "Create a new lesson for a course",
          "return_type": "Dict[str, Any]",
          "path_params": [{"name": "course_id", "type": "int"}],
          "body_param": {"name": "lesson_data", "type": "LessonCreate"}
        },
        {
          "method": "GET",
          "path": "/lessons/{lesson_id}",
          "function_name": "get_lesson",
          "description": "Get lesson details by ID with content",
          "return_type": "Dict[str, Any]",
          "path_params": [{"name": "lesson_id", "type": "int"}]
        },
        {
          "method": "PUT",
          "path": "/lessons/{lesson_id}",
          "function_name": "update_lesson",
          "description": "Update lesson information and content",
          "return_type": "Dict[str, Any]",
          "path_params": [{"name": "lesson_id", "type": "int"}],
          "body_param": {"name": "lesson_data", "type": "LessonUpdate"}
        },
        {
          "method": "DELETE",
          "path": "/lessons/{lesson_id}",
          "function_name": "delete_lesson",
          "description": "Delete a lesson and associated content",
          "return_type": "Dict[str, Any]",
          "path_params": [{"name": "lesson_id", "type": "int"}]
        },
        {
          "method": "POST",
          "path": "/lessons/{lesson_id}/reorder",
          "function_name": "reorder_lesson",
          "description": "Change lesson order within course",
          "return_type": "Dict[str, Any]",
          "path_params": [{"name": "lesson_id", "type": "int"}],
          "body_param": {"name": "order_data", "type": "Dict[str, Any]"}
        },
        {
          "method": "POST",
          "path": "/lessons/{lesson_id}/duplicate",
          "function_name": "duplicate_lesson",
          "description": "Duplicate a lesson with all content",
          "return_type": "Dict[str, Any]",
          "path_params": [{"name": "lesson_id", "type": "int"}]
        }
      ]
    },
    {
      "name": "content",
      "routes": [
        {
          "method": "POST",
          "path": "/lessons/{lesson_id}/content",
          "function_name": "upload_content",
          "description": "Upload content files for a lesson",
          "return_type": "Dict[str, Any]",
          "path_params": [{"name": "lesson_id", "type": "int"}],
          "body_param": {"name": "files", "type": "List[UploadFile]"}
        },
        {
          "method": "GET",
          "path": "/lessons/{lesson_id}/content",
          "function_name": "list_lesson_content",
          "description": "List all content for a lesson",
          "return_type": "List[Dict[str, Any]]",
          "path_params": [{"name": "lesson_id", "type": "int"}]
        },
        {
          "method": "GET",
          "path": "/lessons/{lesson_id}/content/{content_id}",
          "function_name": "get_content",
          "description": "Get specific content item with metadata",
          "return_type": "Dict[str, Any]",
          "path_params": [
            {"name": "lesson_id", "type": "int"},
            {"name": "content_id", "type": "int"}
          ]
        },
        {
          "method": "PUT",
          "path": "/lessons/{lesson_id}/content/{content_id}",
          "function_name": "update_content",
          "description": "Update content metadata and properties",
          "return_type": "Dict[str, Any]",
          "path_params": [
            {"name": "lesson_id", "type": "int"},
            {"name": "content_id", "type": "int"}
          ],
          "body_param": {"name": "content_data", "type": "ContentUpdate"}
        },
        {
          "method": "DELETE",
          "path": "/lessons/{lesson_id}/content/{content_id}",
          "function_name": "delete_content",
          "description": "Delete content item and associated files",
          "return_type": "Dict[str, Any]",
          "path_params": [
            {"name": "lesson_id", "type": "int"},
            {"name": "content_id", "type": "int"}
          ]
        },
        {
          "method": "POST",
          "path": "/content/{content_id}/process",
          "function_name": "process_content",
          "description": "Trigger content processing (video encoding, etc.)",
          "return_type": "Dict[str, Any]",
          "path_params": [{"name": "content_id", "type": "int"}]
        },
        {
          "method": "GET",
          "path": "/content/{content_id}/download",
          "function_name": "download_content",
          "description": "Download content file with access control",
          "return_type": "StreamingResponse",
          "path_params": [{"name": "content_id", "type": "int"}]
        }
      ]
    },
    {
      "name": "category",
      "routes": [
        {
          "method": "GET",
          "path": "/categories",
          "function_name": "list_categories",
          "description": "List all course categories hierarchically",
          "return_type": "List[Dict[str, Any]]",
          "query_params": [
            {"name": "parent_id", "type": "Optional[int]", "default": "None"},
            {"name": "include_counts", "type": "bool", "default": "True"}
          ]
        },
        {
          "method": "POST",
          "path": "/categories",
          "function_name": "create_category",
          "description": "Create a new course category",
          "return_type": "Dict[str, Any]",
          "body_param": {"name": "category_data", "type": "CategoryCreate"}
        },
        {
          "method": "GET",
          "path": "/categories/{category_id}",
          "function_name": "get_category",
          "description": "Get category details with course count",
          "return_type": "Dict[str, Any]",
          "path_params": [{"name": "category_id", "type": "int"}]
        },
        {
          "method": "PUT",
          "path": "/categories/{category_id}",
          "function_name": "update_category",
          "description": "Update category information",
          "return_type": "Dict[str, Any]",
          "path_params": [{"name": "category_id", "type": "int"}],
          "body_param": {"name": "category_data", "type": "CategoryUpdate"}
        },
        {
          "method": "DELETE",
          "path": "/categories/{category_id}",
          "function_name": "delete_category",
          "description": "Delete a category and reassign courses",
          "return_type": "Dict[str, Any]",
          "path_params": [{"name": "category_id", "type": "int"}]
        },
        {
          "method": "GET",
          "path": "/categories/{category_id}/courses",
          "function_name": "get_category_courses",
          "description": "Get all courses in a category",
          "return_type": "List[Dict[str, Any]]",
          "path_params": [{"name": "category_id", "type": "int"}],
          "query_params": [
            {"name": "skip", "type": "int", "default": "0"},
            {"name": "limit", "type": "int", "default": "100"}
          ]
        }
      ]
    }
  ],
  "database_models": [
    {
      "name": "Course",
      "description": "Course entity with all course information and cross-service relationships",
      "fields": [
        {"name": "course_id", "type": "int", "nullable": false, "primary_key": true},
        {"name": "title", "type": "str", "nullable": false, "max_length": 200, "index": true},
        {"name": "description", "type": "str", "nullable": false, "max_length": 2000},
        {"name": "short_description", "type": "str", "nullable": true, "max_length": 500},
        {"name": "instructor_id", "type": "int", "nullable": false, "foreign_key": "user_service.users.user_id", "index": true},
        {"name": "category_id", "type": "int", "nullable": true, "foreign_key": "categories.category_id", "index": true},
        {"name": "price", "type": "decimal", "nullable": true, "precision": 10, "scale": 2},
        {"name": "duration_hours", "type": "int", "nullable": true},
        {"name": "difficulty_level", "type": "str", "nullable": false, "default": "beginner", "choices": ["beginner", "intermediate", "advanced"]},
        {"name": "language", "type": "str", "nullable": false, "default": "English", "max_length": 50},
        {"name": "is_published", "type": "bool", "nullable": false, "default": false, "index": true},
        {"name": "is_featured", "type": "bool", "nullable": false, "default": false, "index": true},
        {"name": "is_free", "type": "bool", "nullable": false, "default": false, "index": true},
        {"name": "thumbnail_url", "type": "str", "nullable": true, "max_length": 500},
        {"name": "preview_video_url", "type": "str", "nullable": true, "max_length": 500},
        {"name": "requirements", "type": "json", "nullable": true},
        {"name": "learning_objectives", "type": "json", "nullable": true},
        {"name": "tags", "type": "json", "nullable": true},
        {"name": "max_students", "type": "int", "nullable": true},
        {"name": "current_students", "type": "int", "nullable": false, "default": 0},
        {"name": "rating_average", "type": "decimal", "nullable": true, "precision": 3, "scale": 2},
        {"name": "rating_count", "type": "int", "nullable": false, "default": 0},
        {"name": "certificate_offered", "type": "bool", "nullable": false, "default": false},
        {"name": "estimated_completion_time", "type": "int", "nullable": true},
        {"name": "last_updated_content", "type": "datetime", "nullable": true},
        {"name": "total_lessons", "type": "int", "nullable": false, "default": 0},
        {"name": "total_content_size", "type": "bigint", "nullable": false, "default": 0},
        {"name": "status", "type": "str", "nullable": false, "default": "draft", "choices": ["draft", "review", "published", "archived"]},
        {"name": "created_at", "type": "datetime", "nullable": false},
        {"name": "updated_at", "type": "datetime", "nullable": false},
        {"name": "published_at", "type": "datetime", "nullable": true},
        {"name": "archived_at", "type": "datetime", "nullable": true}
      ]
    },
    {
      "name": "Lesson",
      "description": "Individual lesson within a course with content management",
      "fields": [
        {"name": "lesson_id", "type": "int", "nullable": false, "primary_key": true},
        {"name": "course_id", "type": "int", "nullable": false, "foreign_key": "courses.course_id", "index": true},
        {"name": "title", "type": "str", "nullable": false, "max_length": 200},
        {"name": "description", "type": "str", "nullable": true, "max_length": 1000},
        {"name": "content", "type": "text", "nullable": false},
        {"name": "content_type", "type": "str", "nullable": false, "default": "text", "choices": ["text", "video", "audio", "interactive", "quiz"]},
        {"name": "order_index", "type": "int", "nullable": false, "index": true},
        {"name": "duration_minutes", "type": "int", "nullable": true},
        {"name": "is_free_preview", "type": "bool", "nullable": false, "default": false},
        {"name": "is_published", "type": "bool", "nullable": false, "default": false},
        {"name": "video_url", "type": "str", "nullable": true, "max_length": 500},
        {"name": "transcript", "type": "text", "nullable": true},
        {"name": "notes", "type": "text", "nullable": true},
        {"name": "attachments", "type": "json", "nullable": true},
        {"name": "quiz_id", "type": "int", "nullable": true},
        {"name": "completion_criteria", "type": "json", "nullable": true},
        {"name": "estimated_time", "type": "int", "nullable": true},
        {"name": "content_size", "type": "bigint", "nullable": false, "default": 0},
        {"name": "view_count", "type": "int", "nullable": false, "default": 0},
        {"name": "created_at", "type": "datetime", "nullable": false},
        {"name": "updated_at", "type": "datetime", "nullable": false}
      ]
    },
    {
      "name": "Category",
      "description": "Hierarchical course categories for organization",
      "fields": [
        {"name": "category_id", "type": "int", "nullable": false, "primary_key": true},
        {"name": "name", "type": "str", "nullable": false, "max_length": 100, "unique": true},
        {"name": "description", "type": "str", "nullable": true, "max_length": 500},
        {"name": "slug", "type": "str", "nullable": false, "max_length": 100, "unique": true, "index": true},
        {"name": "parent_category_id", "type": "int", "nullable": true, "foreign_key": "categories.category_id"},
        {"name": "icon_url", "type": "str", "nullable": true, "max_length": 500},
        {"name": "banner_url", "type": "str", "nullable": true, "max_length": 500},
        {"name": "color", "type": "str", "nullable": true, "max_length": 7},
        {"name": "sort_order", "type": "int", "nullable": false, "default": 0},
        {"name": "level", "type": "int", "nullable": false, "default": 0},
        {"name": "course_count", "type": "int", "nullable": false, "default": 0},
        {"name": "is_active", "type": "bool", "nullable": false, "default": true},
        {"name": "is_featured", "type": "bool", "nullable": false, "default": false},
        {"name": "meta_title", "type": "str", "nullable": true, "max_length": 200},
        {"name": "meta_description", "type": "str", "nullable": true, "max_length": 500},
        {"name": "created_at", "type": "datetime", "nullable": false},
        {"name": "updated_at", "type": "datetime", "nullable": false}
      ]
    },
    {
      "name": "LessonContent",
      "description": "Content files and media associated with lessons",
      "fields": [
        {"name": "content_id", "type": "int", "nullable": false, "primary_key": true},
        {"name": "lesson_id", "type": "int", "nullable": false, "foreign_key": "lessons.lesson_id", "index": true},
        {"name": "content_type", "type": "str", "nullable": false, "choices": ["video", "audio", "document", "image", "archive", "code"]},
        {"name": "file_name", "type": "str", "nullable": false, "max_length": 255},
        {"name": "original_name", "type": "str", "nullable": false, "max_length": 255},
        {"name": "file_path", "type": "str", "nullable": false, "max_length": 500},
        {"name": "file_size", "type": "bigint", "nullable": false},
        {"name": "mime_type", "type": "str", "nullable": false, "max_length": 100},
        {"name": "duration_seconds", "type": "int", "nullable": true},
        {"name": "resolution", "type": "str", "nullable": true, "max_length": 20},
        {"name": "thumbnail_url", "type": "str", "nullable": true, "max_length": 500},
        {"name": "processed_url", "type": "str", "nullable": true, "max_length": 500},
        {"name": "is_downloadable", "type": "bool", "nullable": false, "default": false},
        {"name": "is_processed", "type": "bool", "nullable": false, "default": false},
        {"name": "processing_status", "type": "str", "nullable": false, "default": "pending", "choices": ["pending", "processing", "completed", "failed"]},
        {"name": "order_index", "type": "int", "nullable": false, "default": 0},
        {"name": "access_level", "type": "str", "nullable": false, "default": "enrolled", "choices": ["public", "preview", "enrolled", "premium"]},
        {"name": "download_count", "type": "int", "nullable": false, "default": 0},
        {"name": "view_count", "type": "int", "nullable": false, "default": 0},
        {"name": "metadata", "type": "json", "nullable": true},
        {"name": "created_at", "type": "datetime", "nullable": false},
        {"name": "updated_at", "type": "datetime", "nullable": false},
        {"name": "processed_at", "type": "datetime", "nullable": true}
      ]
    },
    {
      "name": "CourseTag",
      "description": "Tags for course categorization and search",
      "fields": [
        {"name": "tag_id", "type": "int", "nullable": false, "primary_key": true},
        {"name": "name", "type": "str", "nullable": false, "max_length": 50, "unique": true, "index": true},
        {"name": "slug", "type": "str", "nullable": false, "max_length": 50, "unique": true},
        {"name": "description", "type": "str", "nullable": true, "max_length": 200},
        {"name": "color", "type": "str", "nullable": true, "max_length": 7},
        {"name": "usage_count", "type": "int", "nullable": false, "default": 0},
        {"name": "is_featured", "type": "bool", "nullable": false, "default": false},
        {"name": "created_at", "type": "datetime", "nullable": false},
        {"name": "updated_at", "type": "datetime", "nullable": false}
      ]
    },
    {
      "name": "CourseTagAssociation",
      "description": "Many-to-many relationship between courses and tags",
      "fields": [
        {"name": "course_id", "type": "int", "nullable": false, "foreign_key": "courses.course_id", "primary_key": true},
        {"name": "tag_id", "type": "int", "nullable": false, "foreign_key": "course_tags.tag_id", "primary_key": true},
        {"name": "created_at", "type": "datetime", "nullable": false}
      ]
    }
  ],
  "business_logic": {
    "description": "Comprehensive course creation and management system with content authoring capabilities and cross-service integration",
    "key_features": [
      "Course lifecycle management (draft, review, published, archived)",
      "Rich content authoring with multiple media types and processing",
      "Lesson ordering and organization with content management",
      "Hierarchical category-based course organization",
      "Instructor permission management with user service integration",
      "Content file upload, processing, and delivery management",
      "Course analytics and reporting with cross-service data aggregation",
      "Bulk operations for course and content management",
      "Version control for course content and metadata",
      "SEO optimization for course discovery",
      "Real-time collaborative editing capabilities",
      "Advanced search and filtering with tagging system",
      "Content access control and premium features",
      "Automated content processing and optimization"
    ],
    "validation_rules": [
      "Course title must be unique per instructor",
      "Lessons must have valid sequential order indexes within course",
      "Published courses cannot be deleted, only archived",
      "Instructors can only modify their own courses (validated via user-service)",
      "Course price validation based on platform business rules",
      "Content file size and type restrictions with security scanning",
      "Maximum number of lessons per course limits based on plan",
      "Category hierarchy depth limits and validation",
      "Tag name uniqueness and format validation",
      "Content access level validation based on course enrollment status"
    ],
    "workflows": [
      {
        "name": "course_creation_workflow",
        "steps": [
          "Validate instructor permissions via user-service",
          "Create draft course with basic information",
          "Allow lesson creation and content upload",
          "Process uploaded content (video encoding, thumbnail generation)",
          "Validate course completeness and quality standards",
          "Submit for review (optional workflow state)",
          "Publish course when ready and notify dependent services",
          "Update search indexes and recommendation engines"
        ]
      },
      {
        "name": "content_management_workflow",
        "steps": [
          "Upload content files with security validation",
          "Process media files (thumbnails, video encoding, audio processing)",
          "Generate multiple quality versions for streaming",
          "Associate processed content with lessons",
          "Update lesson and course metadata automatically",
          "Optimize content delivery via CDN",
          "Track content usage and analytics"
        ]
      },
      {
        "name": "instructor_validation_workflow",
        "steps": [
          "Query user-service to validate instructor exists",
          "Check instructor permissions and status",
          "Verify instructor can create/modify courses",
          "Cache instructor data for performance",
          "Handle instructor service unavailability gracefully"
        ]
      }
    ],
    "integrations": [
      "User service integration for instructor validation and profile data",
      "Event-driven updates to enrollment and notification services",
      "Content delivery network for optimized media streaming",
      "Search service integration for course discovery",
      "Analytics service for comprehensive reporting",
      "File storage service for content uploads and management",
      "Video processing service for media content optimization",
      "Notification service for instructor and student updates"
    ]
  },
  "produces_events": [
    "course.created",
    "course.updated", 
    "course.published",
    "course.unpublished",
    "course.archived",
    "course.deleted",
    "lesson.created",
    "lesson.updated",
    "lesson.deleted",
    "lesson.reordered",
    "content.uploaded",
    "content.processed",
    "content.deleted",
    "category.created",
    "category.updated",
    "category.deleted"
  ],
  "consumes_events": [
    "user.created",
    "user.updated",
    "user.deleted",
    "user.role_changed",
    "enrollment.created",
    "enrollment.cancelled",
    "payment.completed",
    "review.created",
    "review.updated"
  ],
  "authentication": true,
  "caching": true,
  "logging": true,
  "dependencies": [
    "python-multipart>=0.0.6",
    "aiofiles>=23.2.1",
    "pillow>=10.1.0",
    "python-magic>=0.4.27",
    "celery>=5.3.4",
    "redis>=5.0.1",
    "elasticsearch>=8.11.0",
    "boto3>=1.34.0",
    "ffmpeg-python>=0.2.0",
    "opencv-python>=4.8.1.78",
    "python-slugify>=8.0.1",
    "bleach>=6.1.0",
    "markdown>=3.5.1",
    "python-docx>=1.1.0",
    "PyPDF2>=3.0.1"
  ],
  "async_tasks": [
    {
      "name": "process_video_content",
      "description": "Process uploaded video files for streaming with multiple quality options",
      "triggers": ["video_upload"],
      "priority": "high",
      "retry_attempts": 3,
      "timeout": 3600
    },
    {
      "name": "generate_course_analytics",
      "description": "Generate comprehensive course performance analytics with cross-service data",
      "schedule": "daily",
      "priority": "low",
      "retry_attempts": 2
    },
    {
      "name": "update_search_index",
      "description": "Update search index with course changes for discovery optimization",
      "triggers": ["course_published", "course_updated", "lesson_created"],
      "priority": "medium",
      "retry_attempts": 2
    },
    {
      "name": "backup_course_content",
      "description": "Backup course content and metadata to cloud storage",
      "schedule": "weekly",
      "priority": "low",
      "retry_attempts": 1
    },
    {
      "name": "generate_course_thumbnails",
      "description": "Generate thumbnails and preview images for courses and lessons",
      "triggers": ["content_upload", "course_created"],
      "priority": "medium",
      "retry_attempts": 2
    },
    {
      "name": "sync_instructor_data",
      "description": "Synchronize instructor data from user service",
      "schedule": "hourly",
      "priority": "medium",
      "retry_attempts": 3
    },
    {
      "name": "cleanup_orphaned_content",
      "description": "Clean up orphaned content files and optimize storage",
      "schedule": "daily",
      "priority": "low",
      "retry_attempts": 1
    }
  ],
  "websocket_endpoints": [
    {
      "name": "course_editing",
      "path": "/ws/courses/{course_id}/edit",
      "description": "Real-time collaborative editing for course content with conflict resolution"
    },
    {
      "name": "content_upload_progress",
      "path": "/ws/upload/progress/{upload_id}",
      "description": "Real-time upload progress updates with detailed status information"
    },
    {
      "name": "lesson_editing",
      "path": "/ws/lessons/{lesson_id}/edit",
      "description": "Real-time collaborative editing for individual lessons"
    },
    {
      "name": "course_analytics_live",
      "path": "/ws/courses/{course_id}/analytics",
      "description": "Live analytics updates for course performance monitoring"
    }
  ],
  "middleware": [
    "logging",
    "timing",
    "security",
    "auth",
    "rate_limiting",
    "file_upload",
    "correlation_id",
    "distributed_tracing",
    "content_security",
    "api_versioning",
    "request_validation",
    "response_compression"
  ]
}
