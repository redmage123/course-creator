# Pylint configuration for Course Creator Platform

[MAIN]
# Python code to execute, usually for sys.path manipulation
init-hook='import sys; sys.path.append(".")'

# Files or directories to be skipped
ignore=CVS,.git,__pycache__,.pytest_cache,venv,.venv,node_modules

# Add files or directories matching the regex patterns to the ignore-list
ignore-patterns=^\..*,.*_pb2\.py$

# Use multiple processes to speed up Pylint
jobs=4

# Pickle collected data for later comparisons
persistent=yes

# Allow loading of arbitrary C extensions
unsafe-load-any-extension=no

[MESSAGES CONTROL]
# Disable specific warnings
disable=
    C0111,  # missing-docstring (we use multiline strings instead)
    R0903,  # too-few-public-methods (common in Pydantic models)
    R0913,  # too-many-arguments (acceptable for API endpoints)
    W0212,  # protected-access (needed for testing)
    C0103,  # invalid-name (conflicts with snake_case preference)
    R0801,  # duplicate-code (acceptable in tests)
    W0511,  # fixme (TODO comments are ok)
    C0301,  # line-too-long (black handles this)
    R0914,  # too-many-locals
    R0915,  # too-many-statements

# Enable specific messages
enable=
    useless-suppression,
    deprecated-pragma,
    use-symbolic-message-instead

[REPORTS]
# Set the output format
output-format=colorized

# Tells whether to display a full report or only the messages
reports=no

# Activate the evaluation score
score=yes

[REFACTORING]
# Maximum number of nested blocks for function/method body
max-nested-blocks=5

# Complete name of functions that never returns
never-returning-functions=sys.exit,argparse.parse_error

[BASIC]
# Naming style matching correct argument names
argument-naming-style=snake_case

# Naming style matching correct attribute names
attr-naming-style=snake_case

# Naming style matching correct class attribute names
class-attribute-naming-style=any

# Naming style matching correct class constant names
class-const-naming-style=UPPER_CASE

# Naming style matching correct class names
class-naming-style=PascalCase

# Naming style matching correct constant names
const-naming-style=UPPER_CASE

# Naming style matching correct function names
function-naming-style=snake_case

# Naming style matching correct method names
method-naming-style=snake_case

# Naming style matching correct module names
module-naming-style=snake_case

# Naming style matching correct variable names
variable-naming-style=snake_case

# Good variable names (allowed exceptions)
good-names=i,j,k,id,db,DAO,e,_,logger

# Include a hint for the correct naming format with invalid-name
include-naming-hint=yes

[FORMAT]
# Maximum number of characters on a single line
max-line-length=120

# Maximum number of lines in a module
max-module-lines=1000

# String used as indentation unit (4 spaces)
indent-string='    '

# Expected format of line ending (LF for Unix)
expected-line-ending-format=LF

[LOGGING]
# Format style used to check logging format string
logging-format-style=new

# Logging modules to check that the string format arguments are in logging function parameter format
logging-modules=logging

[MISCELLANEOUS]
# List of note tags to take in consideration
notes=FIXME,XXX,TODO,HACK,BUG

[SIMILARITIES]
# Minimum lines number of a similarity
min-similarity-lines=10

# Ignore comments when computing similarities
ignore-comments=yes

# Ignore docstrings when computing similarities
ignore-docstrings=yes

# Ignore imports when computing similarities
ignore-imports=yes

# Signatures are removed from the similarity computation
ignore-signatures=yes

[SPELLING]
# Limits count of emitted suggestions for spelling mistakes
max-spelling-suggestions=4

# Spelling dictionary name
spelling-dict=

# List of comma separated words that should not be checked
spelling-ignore-words=

# A path to a file that contains private dictionary
spelling-private-dict-file=

# Tells whether to store unknown words to indicated private dictionary
spelling-store-unknown-words=no

[STRING]
# This flag controls whether inconsistent-quotes generates a warning when the character used as a quote delimiter is used inconsistently within a module
check-quote-consistency=yes

# This flag controls whether the implicit-str-concat should generate a warning on implicit string concatenation in sequences defined over several lines
check-str-concat-over-line-jumps=no

[TYPECHECK]
# List of decorators that produce context managers
contextmanager-decorators=contextlib.contextmanager

# List of members which are set dynamically and missed by pylint inference
generated-members=

# Tells whether missing members accessed in mixin class should be ignored
ignore-mixin-members=yes

# Tells whether to warn about missing members when the owner of the attribute is inferred to be None
ignore-none=yes

# This flag controls whether pylint should warn about no-member and similar checks whenever an opaque object is returned when inferring
ignore-on-opaque-inference=yes

# List of symbolic message names to ignore for Mixin members
ignored-checks-for-mixins=no-member,not-async-context-manager,not-context-manager,attribute-defined-outside-init

# List of class names for which member attributes should not be checked
ignored-classes=optparse.Values,thread._local,_thread._local,SQLObject,scoped_session

# Show a hint with possible names when a member name was not found
missing-member-hint=yes

# The minimum edit distance a name should have in order to be considered a similar match for a missing member name
missing-member-hint-distance=1

# The total number of similar names that should be taken in consideration when showing a hint for a missing member
missing-member-max-choices=1

# Regex pattern to define which classes are considered mixins
mixin-class-rgx=.*[Mm]ixin

[VARIABLES]
# List of additional names supposed to be defined in builtins
additional-builtins=

# Tells whether unused global variables should be treated as a violation
allow-global-unused-variables=yes

# List of names allowed to shadow builtins
allowed-redefined-builtins=

# List of strings which can identify a callback function by name
callbacks=cb_,_cb

# A regular expression matching the name of dummy variables
dummy-variables-rgx=_+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_

# Argument names that match this expression will be ignored
ignored-argument-names=_.*|^ignored_|^unused_

# Tells whether we should check for unused import in __init__ files
init-import=no

# List of qualified module names which can have objects that can redefine builtins
redefining-builtins-modules=six.moves,past.builtins,future.builtins,builtins,io

[CLASSES]
# Warn about protected attribute access inside special methods
check-protected-access-in-special-methods=no

# List of method names used to declare (i.e. assign) instance attributes
defining-attr-methods=__init__,__new__,setUp,__post_init__

# List of member names, which should be excluded from the protected access warning
exclude-protected=_asdict,_fields,_replace,_source,_make

# List of valid names for the first argument in a class method
valid-classmethod-first-arg=cls

# List of valid names for the first argument in a metaclass class method
valid-metaclass-classmethod-first-arg=mcs

[DESIGN]
# List of regular expressions of class ancestor names to ignore when counting public methods
exclude-too-few-public-methods=

# List of qualified class names to ignore when counting class parents
ignored-parents=

# Maximum number of arguments for function/method
max-args=10

# Maximum number of attributes for a class
max-attributes=15

# Maximum number of boolean expressions in an if statement
max-bool-expr=5

# Maximum number of branch for function/method body
max-branches=15

# Maximum number of locals for function/method body
max-locals=20

# Maximum number of parents for a class
max-parents=7

# Maximum number of public methods for a class
max-public-methods=25

# Maximum number of return/yield for function/method body
max-returns=10

# Maximum number of statements in function/method body
max-statements=60

# Minimum number of public methods for a class
min-public-methods=1

[IMPORTS]
# List of modules that can be imported at any level, not just the top level
allow-any-import-level=

# Allow wildcard imports from modules that define __all__
allow-wildcard-with-all=no

# Deprecated modules which should not be used
deprecated-modules=

# Output a graph (.gv or any supported image format) of external dependencies
ext-import-graph=

# Output a graph (.gv or any supported image format) of all (i.e. internal and external) dependencies
import-graph=

# Output a graph (.gv or any supported image format) of internal dependencies
int-import-graph=

# Force import order to recognize a module as part of a third party library
known-third-party=enchant

# Couples of modules and preferred modules, separated by a comma
preferred-modules=

[EXCEPTIONS]
# Exceptions that will emit a warning when caught
overgeneral-exceptions=BaseException,Exception
